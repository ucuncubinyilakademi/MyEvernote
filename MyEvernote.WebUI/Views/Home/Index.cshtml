@model List<MyEvernote.Entity.Note>
@{
    ViewBag.Title = "Index";
}

<div class="container">
    <div class="row">
        <!--Row satırı 12 eşit parçaya ayırır.-->
        <div class="col-md-3">
            <!--Kategoriler-->
            @Html.Partial("_PartialCategories")
        </div>
        <div class="col-md-9">
            <div class="row carousel-holder">
                <div class="col-md-12">
                    <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
                        <ol class="carousel-indicators">
                            <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
                            <li data-target="#carousel-example-generic" data-slide-to="1"></li>
                            <li data-target="#carousel-example-generic" data-slide-to="2"></li>
                        </ol>
                        <div class="carousel-inner">
                            <div class="item active">
                                <img class="slide-image" src="http://placehold.it/800x300" alt="">
                            </div>
                            <div class="item">
                                <img class="slide-image" src="http://placehold.it/800x300" alt="">
                            </div>
                            <div class="item">
                                <img class="slide-image" src="http://placehold.it/800x300" alt="">
                            </div>
                        </div>
                        <a class="left carousel-control" href="#carousel-example-generic" data-slide="prev">
                            <span class="glyphicon glyphicon-chevron-left"></span>
                        </a>
                        <a class="right carousel-control" href="#carousel-example-generic" data-slide="next">
                            <span class="glyphicon glyphicon-chevron-right"></span>
                        </a>
                    </div>
                </div>

            </div>

            <div class="row">
                @foreach (var item in Model)
                {
                    <div class="col-sm-4 col-lg-4 col-md-4">
                        <div class="thumbnail">
                            <img src="http://placehold.it/320x150" alt="@item.Title">
                            <div class="caption">
                                <h6 class="text-right">
                                    <span class="glyphicon glyphicon-user"></span> @item.Owner.Username <br />
                                    <span class="glyphicon glyphicon-time"></span> @item.ModifiedOn.ToString("dd:MM:yy HH:mm")
                                </h6>
                                <h4>
                                    @item.Title
                                </h4>
                                @if (string.IsNullOrEmpty(item.Text) == false && item.Text.Length > 70)
                                {
                                    <p>@(item.Text.Substring(0,70)+"...")</p>
                                    <p class="text-right"><a href="#" class="btn btn-default btn-sm">devamı <span class="glyphicon glyphicon-chevron-right"></span></a></p>
                                }
                                else
                                {
                                    <p>@item.Text</p>
                                }
                            </div>
                            <div>
                                <hr />
                            </div>
                            <div class="ratings">
                                <p class="pull-right">
                                    <button class="btn btn-default btn-sm" data-toggle="modal" data-target="#modal_comment" data-note-id="@item.Id">
                                        <span class="glyphicon glyphicon-comment"></span> Yorumlar
                                    </button>
                                </p>
                                <p>
                                    <button class="btn btn-default btn-sm" type="button">
                                        <span class="glyphicon glyphicon-star-empty"></span> @item.LikeCount
                                    </button>
                                </p>
                            </div>
                        </div>
                    </div>
                }


            </div>
        </div>
    </div>
</div>

@Bootstrap.ModalPopup(id:"modal_comment",title:"Yorumlar")

<script>
    var noteid = -1;
    var modelCommentBodyId = "#modal_comment_body";

    $(function () {
        $('#modal_comment').on('show.bs.modal', function (e) {
            var btn = $(e.relatedTarget);
            noteid = btn.data("note-id")

            $(modelCommentBodyId).load("/Comment/ShowNoteComments/" + noteid)
        });
    })
   

    function doComment(btn, e, commentid, spanid) {     
        var button = $(btn);
        var mode=button.data("edit-mode")

        if (e === "edit_clicked") {
            if (!mode) {
                button.data("edit-mode", true);
                button.removeClass("btn-warning");
                button.addClass("btn-success");
                var btnSpan = button.find("span");
                btnSpan.removeClass("glyphicon-edit");
                btnSpan.addClass("glyphicon-ok");

                $(spanid).attr("contenteditable", true);
            }
            else {
                button.data("edit-mode", false);
                button.addClass("btn-warning");
                button.removeClass("btn-success");
                var btnSpan = button.find("span");
                btnSpan.addClass("glyphicon-edit");
                btnSpan.removeClass("glyphicon-ok");

                $(spanid).attr("contenteditable", false);

                var txt = $(spanid).text();
                $.ajax({
                    method: "POST",
                    url: "/Comment/Edit/" + commentid,
                    data: { text: txt }
                }).done(function (data) {
                    if (data.result) {
                        // yorumlar partial tekrar yüklenir.
                        $(modelCommentBodyId).load("/Comment/ShowNoteComments/" + noteid)
                    }
                    else {
                        alert("Güncelleme Başarısız...")
                    }
                }).fail(function () {
                    alert("Sunucu ile bağlantı kurulamadı.")
                })
            }
        }

        else if (e === "delete_clicked") {
            var dialog_res = confirm("Yorum silinsin mi?");
            if (!dialog_res) return false;

            $.ajax({
                method: "GET",
                url: "/Comment/Delete/" + commentid
            }).done(function (data) {
                if (data.result) {
                    // yorumlar partial tekrar yüklenir.
                    $(modelCommentBodyId).load("/Comment/ShowNoteComments/" + noteid)
                }
                else {
                    alert("Yorum Silinemedi.")
                }
            }).fail(function () {
                alert("Sunucu ile bağlantı kurulanamdı.")
            })
        }
        else if (e === "new_clicked") {
            var txt = $("#new_comment_text").val();
            $.ajax({
                method: "POST",
                url: "/Comment/Create",
                data: {"text":txt,"noteid":noteid}
            }).done(function (data) {
                if (data.result) {
                    // yorumlar partial tekrar yüklenir.
                    $(modelCommentBodyId).load("/Comment/ShowNoteComments/" + noteid)
                }
                else {
                    alert("Yorum Eklenemedi.")
                }
            }).fail(function () {
                alert("Sunucu ile bağlantı kurulanamdı.")
            })
        }
    }


</script>